#!/usr/bin/env bash

set -e

[ -z "$DEBUG" ] || set -x

RMQ_PACKAGE="https://github.com/rabbitmq/rabbitmq-server/releases/download/rabbitmq_v3_6_9/rabbitmq-server-generic-unix-3.6.9.tar.xz"
ERLANG_VERSION="19.2.3"
ERLANG_VERSIONS=( packages/erlang* )
NODES_COUNT=2
NODES_TYPE="c4.xlarge"
DEPLOYMENT_NAME="rmq-$USER"
SERVER_USER="admin"
SERVER_PASS="$(pwgen 20 1)"
ERLANG_COOKIE="$(pwgen 20 1)"
BOSH_DIRECTOR_FQDN="tarantino.directors.cf-app.com"
RELEASE_VERSION="$(awk '/ version/ { print $2 }' < releases/rabbitmq-server/index.yml | tail -n 1)"

main() {
  if should_create_new_manifest
  then
    generate_deployment
    generate_manifest
    ok
  fi
}

should_create_new_manifest() {
  if manifest_exists
  then
    read -rp "Do you want to overwrite the existing manifest? [yn] " overwrite
    [[ "$overwrite" =~ [Yy] ]]
  else
    true
  fi
}

manifest_exists() {
  [ -f deployment ] && [ -f manifest.yml ]
}

generate_deployment() {
  echo
  read -rp "What name would you like to give your deployment? (press enter for $DEPLOYMENT_NAME): " deployment_name
  DEPLOYMENT_NAME="${deployment_name:=$DEPLOYMENT_NAME}"

  echo
  read -rp "Which BOSH release would you like to deploy? (press enter for $RELEASE_VERSION): " release_version
  RELEASE_VERSION="${release_version:=$RELEASE_VERSION}"

  echo
  read -rp "Which RabbitMQ package do you want to deploy? (press enter for $RMQ_PACKAGE): " rmq_package
  RMQ_PACKAGE="${rmq_package:=$RMQ_PACKAGE}"

  echo
  read -rp "Which Erlang version do you want to deploy? (press enter for $ERLANG_VERSION or choose one of: ${ERLANG_VERSIONS[*]#*erlang-}): " erlang_version
  ERLANG_VERSION="${erlang_version:=$ERLANG_VERSION}"

  echo
  read -rp "What username should we set for the Management UI? (press enter for $SERVER_USER): " server_user
  SERVER_USER="${server_user:=$SERVER_USER}"

  echo
  read -rp "What password should we set for the Management UI? (press enter for $SERVER_PASS): " server_pass
  SERVER_PASS="${server_pass:=$SERVER_PASS}"

  echo
  read -rp "What Erlang cookie should we set? (press enter for $ERLANG_COOKIE): " erlang_cookie
  ERLANG_COOKIE="${erlang_cookie:=$ERLANG_COOKIE}"

  echo
  read -rp "How many nodes should there be in this cluster? (press enter for $NODES_COUNT): " nodes_count
  NODES_COUNT="${nodes_count:=$NODES_COUNT}"

  echo
  read -rp "Lastly, what instance type do you want the nodes to be? (press enter for $NODES_TYPE): " nodes_type
  NODES_TYPE="${nodes_type:=$NODES_TYPE}"

  cat > deployment <<EOF
RMQ_PACKAGE=$RMQ_PACKAGE

DEPLOYMENT_NAME=$DEPLOYMENT_NAME
RELEASE_VERSION=$RELEASE_VERSION
BOSH_DIRECTOR_FQDN=$BOSH_DIRECTOR_FQDN

SERVER_USER=$SERVER_USER
SERVER_PASS=$SERVER_PASS

ERLANG_COOKIE=$ERLANG_COOKIE
ERLANG_VERSION=$ERLANG_VERSION
NODES_COUNT=$NODES_COUNT
NODES_TYPE=$NODES_TYPE
EOF
}

generate_manifest() {
  # shellcheck source=/dev/null
  . deployment
  cat - rabbitmq-server.yml > manifest.yml <<EOF
rabbitmq_generic_unix: &rabbitmq_generic_unix $RMQ_PACKAGE
deployment_name: &deployment_name $DEPLOYMENT_NAME
release_version: &release_version $RELEASE_VERSION

server_host: &server_host $DEPLOYMENT_NAME.$BOSH_DIRECTOR_FQDN
server_user: &server_user $SERVER_USER
server_pass: &server_pass $SERVER_PASS

erlang_cookie: &erlang_cookie $ERLANG_COOKIE
erlang_version: &erlang_version $ERLANG_VERSION

instance_count: &instance_count $NODES_COUNT
instance_type: &instance_type $NODES_TYPE
EOF
}

ok() {
  echo "
Manifest created, you can now deploy with script/deploy
"
}

main
