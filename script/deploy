#!/usr/bin/env bash

set -e

[ -z "$DEBUG" ] || set -x

LASTPASS_BOSH_DIRECTOR_CREDENTIALS="Shared-London Services/london-ci/bosh-env-tarantino"

BOSH_DIRECTOR_FQDN="tarantino.directors.cf-app.com"

main() {
  ensure_logged_in
  maybe_deploy
}

deploy() {
  . deployment
  generate_manifest
  upload_latest_final_release
  bosh deployment manifest.yml
  bosh deploy --no-redact
  deployed
}

ensure_logged_in() {
  bosh stemcells &>/dev/null ||
  bosh login "$(bosh_username)" "$(bosh_password)"
}

bosh_username() {
  lpass show --username "$LASTPASS_BOSH_DIRECTOR_CREDENTIALS"
}

bosh_password() {
  lpass show --password "$LASTPASS_BOSH_DIRECTOR_CREDENTIALS"
}

deployment_exists() {
  [ -f deployment ]
}


maybe_deploy() {
  if deployment_exists
  then
    . deployment
    echo "
Using existing deployment $DEPLOYMENT_NAME
    "
    deploy
  else
    echo "It doesn't seem that you have deployed using script/create-deployment, nothing to deploy"
  fi
}

generate_manifest() {
  cat - rabbitmq-server.yml > manifest.yml <<EOF
rabbitmq_generic_unix: &rabbitmq_generic_unix $RMQ_PACKAGE
deployment_name: &deployment_name $DEPLOYMENT_NAME

server_host: &server_host $DEPLOYMENT_NAME.$BOSH_DIRECTOR_FQDN
server_user: &server_user $SERVER_USER
server_pass: &server_pass $SERVER_PASS

erlang_cookie: &erlang_cookie $ERLANG_COOKIE

server_count: &server_count $NODES_COUNT
EOF
}

upload_latest_final_release() {
  local final_releases latest_final_release_manifest
  final_releases=(releases/*/*.yml)
  latest_final_release_manifest="${final_releases[*]: -1}"

  bosh upload release "$latest_final_release_manifest"
}

deployed() {
  echo "
Successfully deployed $NODES_COUNT node(s) of $RMQ_PACKAGE

  Deploument name: $DEPLOYMENT_NAME

  URL:  https://$DEPLOYMENT_NAME.$BOSH_DIRECTOR_FQDN/#/
  USER: $SERVER_USER
  PASS: $SERVER_PASS

To SSH into any of the RabbitMQ node(s) that you have just deployed:

  cd ../rabbitmq-credentials/bosh
  git pull
  ./ssh
"
}

main
