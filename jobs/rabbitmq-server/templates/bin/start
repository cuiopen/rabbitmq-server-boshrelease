#!/usr/bin/env bash

set -e

# shellcheck source=/dev/null
. /var/vcap/jobs/rabbitmq-server/debug
# shellcheck source=/dev/null
. /var/vcap/jobs/rabbitmq-server/env

_setup_run_dir
_setup_log_dir
# log stdout & stderr to start.log
exec 1> >(tee -a "${RABBITMQ_LOG_BASE:?must be set}/start.log") 2>&1

echo "
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
> Starting rabbitmq-server BOSH job: $(date)
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>"

# RabbitMQ pre-requisites (a.k.a. pre-start)
_setup_mnesia_dir_and_parent_dir
_setup_trust_store_dir_and_parent_dir
_increase_file_descriptor_limit
_add_hostname_alias_to_etc_hosts
_write_erlang_cookie
_add_rabbitmq_server_env_to_global_shell_profile
_install_generic_unix_package
_enable_rabbitmq_management_before_rabbitmq_starts

_start-stop-daemon_rabbitmq-server

# Operations that require RabbitMQ to have started (a.k.a. post-start)
_wait_for_mnesia_tables
_enable_all_plugins

if [ -n "${BOOTSTRAP_NODE?must be defined}" ]
then
  _set_cluster_name
  _add_admin_user
  _grant_admin_privileges_to_admin_user
else
  echo "$0 will only run on the bootstrap node, ${BOOTSTRAP_NODE_INSTANCE:?must be set}"
fi

_add_man_pages

echo "
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
< rabbitmq-server BOSH job completed successfully: $(date)
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<"
