#!/usr/bin/env bash

set -e

# shellcheck source=/dev/null
. /var/vcap/jobs/rabbitmq-server/debug
# shellcheck source=/dev/null
. /var/vcap/jobs/rabbitmq-server/env

main() {
  date
  add_hostname_alias_to_etc_hosts
  write_erlang_cookie
  install_generic_unix_package
  add_rabbitmq_server_env_to_global_shell_profile
  enable_plugins
}

add_hostname_alias_to_etc_hosts() {
  grep "${ETC_HOSTS:?must be defined}" /etc/hosts ||
    echo "$ETC_HOSTS" >> /etc/hosts
}

write_erlang_cookie() {
  echo -n "${ERLANG_COOKIE:?must be defined}" > /home/"${SERVICE_USER:?must be defined}"/.erlang.cookie
  chown "$SERVICE_USER:${SERVICE_GROUP:?must be defined}" "/home/$SERVICE_USER/.erlang.cookie"
  chmod 600 "/home/$SERVICE_USER/.erlang.cookie"
}

install_generic_unix_package() {
  true "${RABBITMQ_SERVER_PACKAGE_URL:?must be defined}"

  (
    local archive package_dir _version
    archive="${RABBITMQ_SERVER_PACKAGE_URL##*/}"
    _version="${RABBITMQ_SERVER_PACKAGE_URL##*generic-unix-}"
    package_dir="rabbitmq_server-${_version%%.tar.xz}"

    cd /var/vcap/packages

    if [ -d "$package_dir" ]
    then
      echo "$package_dir already exists, nothing to download"
    else
      [ -f "$archive" ] ||
        curl --connect-timeout 3 --max-time $((3 * 60)) -svL -o "$archive" "$RABBITMQ_SERVER_PACKAGE_URL"

      tar xJf "$archive"
    fi

    ln -nsf "$package_dir" "${RABBITMQ_SERVER_PACKAGE:?must be defined}"
  )
}

add_rabbitmq_server_env_to_global_shell_profile() {
  cat > /etc/profile.d/rabbitmq-server-env.sh <<EOF
. /var/vcap/jobs/rabbitmq-server/env
EOF
}

enable_plugins() {
  # shellcheck disable=SC2086
  rabbitmq-plugins enable ${RABBITMQ_PLUGINS:?must be defined} --offline
}

main
